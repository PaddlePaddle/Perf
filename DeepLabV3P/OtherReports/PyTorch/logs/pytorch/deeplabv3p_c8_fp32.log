Mon May 31 00:14:44 2021[1,0]<stderr>:2021-05-31 00:14:44,760 - mmseg - INFO - Environment info:
Mon May 31 00:14:44 2021[1,0]<stderr>:------------------------------------------------------------
Mon May 31 00:14:44 2021[1,0]<stderr>:sys.platform: linux
Mon May 31 00:14:44 2021[1,0]<stderr>:Python: 3.6.10 |Anaconda, Inc.| (default, Mar 23 2020, 23:13:11) [GCC 7.3.0]
Mon May 31 00:14:44 2021[1,0]<stderr>:CUDA available: True
Mon May 31 00:14:44 2021[1,0]<stderr>:GPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB
Mon May 31 00:14:44 2021[1,0]<stderr>:CUDA_HOME: /usr/local/cuda
Mon May 31 00:14:44 2021[1,0]<stderr>:NVCC: Build cuda_11.0_bu.TC445_37.28358933_0
Mon May 31 00:14:44 2021[1,0]<stderr>:GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Mon May 31 00:14:44 2021[1,0]<stderr>:PyTorch: 1.6.0a0+9907a3e
Mon May 31 00:14:44 2021[1,0]<stderr>:PyTorch compiling details: PyTorch built with:
Mon May 31 00:14:44 2021[1,0]<stderr>:  - GCC 7.5
Mon May 31 00:14:44 2021[1,0]<stderr>:  - C++ Version: 201402
Mon May 31 00:14:44 2021[1,0]<stderr>:  - Intel(R) Math Kernel Library Version 2019.0.1 Product Build 20180928 for Intel(R) 64 architecture applications
Mon May 31 00:14:44 2021[1,0]<stderr>:  - Intel(R) MKL-DNN v1.2.0 (Git Hash N/A)
Mon May 31 00:14:44 2021[1,0]<stderr>:  - OpenMP 201511 (a.k.a. OpenMP 4.5)
Mon May 31 00:14:44 2021[1,0]<stderr>:  - NNPACK is enabled
Mon May 31 00:14:44 2021[1,0]<stderr>:  - CPU capability usage: AVX2
Mon May 31 00:14:44 2021[1,0]<stderr>:  - CUDA Runtime 11.0
Mon May 31 00:14:44 2021[1,0]<stderr>:  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_80,code=compute_80
Mon May 31 00:14:44 2021[1,0]<stderr>:  - CuDNN 8.0.1
Mon May 31 00:14:44 2021[1,0]<stderr>:  - Magma 2.5.2
Mon May 31 00:14:44 2021[1,0]<stderr>:  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 
Mon May 31 00:14:44 2021[1,0]<stderr>:
Mon May 31 00:14:44 2021[1,0]<stderr>:TorchVision: 0.7.0a0
Mon May 31 00:14:44 2021[1,0]<stderr>:OpenCV: 3.4.1
Mon May 31 00:14:44 2021[1,0]<stderr>:MMCV: 1.2.7
Mon May 31 00:14:44 2021[1,0]<stderr>:MMCV Compiler: GCC 7.5
Mon May 31 00:14:44 2021[1,0]<stderr>:MMCV CUDA Compiler: 11.0
Mon May 31 00:14:44 2021[1,0]<stderr>:MMSegmentation: 0.12.0+3e46c1b
Mon May 31 00:14:44 2021[1,0]<stderr>:------------------------------------------------------------
Mon May 31 00:14:44 2021[1,0]<stderr>:
Mon May 31 00:14:44 2021[1,0]<stderr>:2021-05-31 00:14:44,760 - mmseg - INFO - Distributed training: True
Mon May 31 00:14:45 2021[1,0]<stderr>:2021-05-31 00:14:45,197 - mmseg - INFO - Config:
Mon May 31 00:14:45 2021[1,0]<stderr>:norm_cfg = dict(type='SyncBN', requires_grad=True)
Mon May 31 00:14:45 2021[1,0]<stderr>:model = dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:    type='EncoderDecoder',
Mon May 31 00:14:45 2021[1,0]<stderr>:    pretrained='open-mmlab://resnet50_v1c',
Mon May 31 00:14:45 2021[1,0]<stderr>:    backbone=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='ResNetV1c',
Mon May 31 00:14:45 2021[1,0]<stderr>:        depth=50,
Mon May 31 00:14:45 2021[1,0]<stderr>:        num_stages=4,
Mon May 31 00:14:45 2021[1,0]<stderr>:        out_indices=(0, 1, 2, 3),
Mon May 31 00:14:45 2021[1,0]<stderr>:        dilations=(1, 1, 2, 4),
Mon May 31 00:14:45 2021[1,0]<stderr>:        strides=(1, 2, 1, 1),
Mon May 31 00:14:45 2021[1,0]<stderr>:        norm_cfg=dict(type='SyncBN', requires_grad=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:        norm_eval=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:        style='pytorch',
Mon May 31 00:14:45 2021[1,0]<stderr>:        contract_dilation=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:    decode_head=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='DepthwiseSeparableASPPHead',
Mon May 31 00:14:45 2021[1,0]<stderr>:        in_channels=2048,
Mon May 31 00:14:45 2021[1,0]<stderr>:        in_index=3,
Mon May 31 00:14:45 2021[1,0]<stderr>:        channels=512,
Mon May 31 00:14:45 2021[1,0]<stderr>:        dilations=(1, 12, 24, 36),
Mon May 31 00:14:45 2021[1,0]<stderr>:        c1_in_channels=256,
Mon May 31 00:14:45 2021[1,0]<stderr>:        c1_channels=48,
Mon May 31 00:14:45 2021[1,0]<stderr>:        dropout_ratio=0.1,
Mon May 31 00:14:45 2021[1,0]<stderr>:        num_classes=19,
Mon May 31 00:14:45 2021[1,0]<stderr>:        norm_cfg=dict(type='SyncBN', requires_grad=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:        align_corners=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:        loss_decode=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
Mon May 31 00:14:45 2021[1,0]<stderr>:    auxiliary_head=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='FCNHead',
Mon May 31 00:14:45 2021[1,0]<stderr>:        in_channels=1024,
Mon May 31 00:14:45 2021[1,0]<stderr>:        in_index=2,
Mon May 31 00:14:45 2021[1,0]<stderr>:        channels=256,
Mon May 31 00:14:45 2021[1,0]<stderr>:        num_convs=1,
Mon May 31 00:14:45 2021[1,0]<stderr>:        concat_input=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:        dropout_ratio=0.1,
Mon May 31 00:14:45 2021[1,0]<stderr>:        num_classes=19,
Mon May 31 00:14:45 2021[1,0]<stderr>:        norm_cfg=dict(type='SyncBN', requires_grad=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:        align_corners=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:        loss_decode=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
Mon May 31 00:14:45 2021[1,0]<stderr>:    train_cfg=dict(),
Mon May 31 00:14:45 2021[1,0]<stderr>:    test_cfg=dict(mode='whole'))
Mon May 31 00:14:45 2021[1,0]<stderr>:dataset_type = 'CityscapesDataset'
Mon May 31 00:14:45 2021[1,0]<stderr>:data_root = 'data/cityscapes/'
Mon May 31 00:14:45 2021[1,0]<stderr>:img_norm_cfg = dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
Mon May 31 00:14:45 2021[1,0]<stderr>:crop_size = (512, 1024)
Mon May 31 00:14:45 2021[1,0]<stderr>:train_pipeline = [
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='LoadImageFromFile'),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='LoadAnnotations'),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='RandomFlip', prob=0.5),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='PhotoMetricDistortion'),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='Normalize',
Mon May 31 00:14:45 2021[1,0]<stderr>:        mean=[123.675, 116.28, 103.53],
Mon May 31 00:14:45 2021[1,0]<stderr>:        std=[58.395, 57.12, 57.375],
Mon May 31 00:14:45 2021[1,0]<stderr>:        to_rgb=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='DefaultFormatBundle'),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
Mon May 31 00:14:45 2021[1,0]<stderr>:]
Mon May 31 00:14:45 2021[1,0]<stderr>:test_pipeline = [
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(type='LoadImageFromFile'),
Mon May 31 00:14:45 2021[1,0]<stderr>:    dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='MultiScaleFlipAug',
Mon May 31 00:14:45 2021[1,0]<stderr>:        img_scale=(2048, 1024),
Mon May 31 00:14:45 2021[1,0]<stderr>:        flip=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:        transforms=[
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='Resize', keep_ratio=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='RandomFlip'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                type='Normalize',
Mon May 31 00:14:45 2021[1,0]<stderr>:                mean=[123.675, 116.28, 103.53],
Mon May 31 00:14:45 2021[1,0]<stderr>:                std=[58.395, 57.12, 57.375],
Mon May 31 00:14:45 2021[1,0]<stderr>:                to_rgb=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='ImageToTensor', keys=['img']),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='Collect', keys=['img'])
Mon May 31 00:14:45 2021[1,0]<stderr>:        ])
Mon May 31 00:14:45 2021[1,0]<stderr>:]
Mon May 31 00:14:45 2021[1,0]<stderr>:data = dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:    samples_per_gpu=4,
Mon May 31 00:14:45 2021[1,0]<stderr>:    workers_per_gpu=8,
Mon May 31 00:14:45 2021[1,0]<stderr>:    train=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='CityscapesDataset',
Mon May 31 00:14:45 2021[1,0]<stderr>:        data_root='data/cityscapes/',
Mon May 31 00:14:45 2021[1,0]<stderr>:        img_dir='leftImg8bit/train',
Mon May 31 00:14:45 2021[1,0]<stderr>:        ann_dir='gtFine/train',
Mon May 31 00:14:45 2021[1,0]<stderr>:        pipeline=[
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='LoadImageFromFile'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='LoadAnnotations'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='RandomFlip', prob=0.5),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='PhotoMetricDistortion'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                type='Normalize',
Mon May 31 00:14:45 2021[1,0]<stderr>:                mean=[123.675, 116.28, 103.53],
Mon May 31 00:14:45 2021[1,0]<stderr>:                std=[58.395, 57.12, 57.375],
Mon May 31 00:14:45 2021[1,0]<stderr>:                to_rgb=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='DefaultFormatBundle'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
Mon May 31 00:14:45 2021[1,0]<stderr>:        ]),
Mon May 31 00:14:45 2021[1,0]<stderr>:    val=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='CityscapesDataset',
Mon May 31 00:14:45 2021[1,0]<stderr>:        data_root='data/cityscapes/',
Mon May 31 00:14:45 2021[1,0]<stderr>:        img_dir='leftImg8bit/val',
Mon May 31 00:14:45 2021[1,0]<stMon May 31 00:14:45 2021[1,0]<stderr>:       transforms=[
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='Resize', keep_ratio=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='RandomFlip'),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                        type='Normalize',
Mon May 31 00:14:45 2021[1,0]<stderr>:                        mean=[123.675, 116.28, 103.53],
Mon May 31 00:14:45 2021[1,0]<stderr>:                        std=[58.395, 57.12, 57.375],
Mon May 31 00:14:45 2021[1,0]<stderr>:                        to_rgb=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='ImageToTensor', keys=['img']),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='Collect', keys=['img'])
Mon May 31 00:14:45 2021[1,0]<stderr>:                ])
Mon May 31 00:14:45 2021[1,0]<stderr>:        ]),
Mon May 31 00:14:45 2021[1,0]<stderr>:    test=dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:        type='CityscapesDataset',
Mon May 31 00:14:45 2021[1,0]<stderr>:        data_root='data/cityscapes/',
Mon May 31 00:14:45 2021[1,0]<stderr>:        img_dir='leftImg8bit/val',
Mon May 31 00:14:45 2021[1,0]<stderr>:        ann_dir='gtFine/val',
Mon May 31 00:14:45 2021[1,0]<stderr>:        pipeline=[
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(type='LoadImageFromFile'),
Mon May 31 00:14:45 2021[1,0]<stderr>:            dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                type='MultiScaleFlipAug',
Mon May 31 00:14:45 2021[1,0]<stderr>:                img_scale=(2048, 1024),
Mon May 31 00:14:45 2021[1,0]<stderr>:                flip=False,
Mon May 31 00:14:45 2021[1,0]<stderr>:                transforms=[
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='Resize', keep_ratio=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='RandomFlip'),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:                        type='Normalize',
Mon May 31 00:14:45 2021[1,0]<stderr>:                        mean=[123.675, 116.28, 103.53],
Mon May 31 00:14:45 2021[1,0]<stderr>:                        std=[58.395, 57.12, 57.375],
Mon May 31 00:14:45 2021[1,0]<stderr>:                        to_rgb=True),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='ImageToTensor', keys=['img']),
Mon May 31 00:14:45 2021[1,0]<stderr>:                    dict(type='Collect', keys=['img'])
Mon May 31 00:14:45 2021[1,0]<stderr>:                ])
Mon May 31 00:14:45 2021[1,0]<stderr>:        ]))
Mon May 31 00:14:45 2021[1,0]<stderr>:log_config = dict(
Mon May 31 00:14:45 2021[1,0]<stderr>:    interval=1, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
Mon May 31 00:14:45 2021[1,0]<stderr>:dist_params = dict(backend='nccl')
Mon May 31 00:14:45 2021[1,0]<stderr>:log_level = 'INFO'
Mon May 31 00:14:45 2021[1,0]<stderr>:load_from = None
Mon May 31 00:14:45 2021[1,0]<stderr>:resume_from = None
Mon May 31 00:14:45 2021[1,0]<stderr>:workflow = [('train', 1)]
Mon May 31 00:14:45 2021[1,0]<stderr>:cudnn_benchmark = True
Mon May 31 00:14:45 2021[1,0]<stderr>:optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
Mon May 31 00:14:45 2021[1,0]<stderr>:optimizer_config = dict()
Mon May 31 00:14:45 2021[1,0]<stderr>:lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
Mon May 31 00:14:45 2021[1,0]<stderr>:runner = dict(type='IterBasedRunner', max_iters=20)
Mon May 31 00:14:45 2021[1,0]<stderr>:checkpoint_config = dict(by_epoch=False, interval=8000)
Mon May 31 00:14:45 2021[1,0]<stderr>:evaluation = dict(interval=8000, metric='mIoU')
Mon May 31 00:14:45 2021[1,0]<stderr>:work_dir = './work_dirs/deeplabv3plus_r50-d8_512x1024_80k_cityscapes'
Mon May 31 00:14:45 2021[1,0]<stderr>:gpu_ids = range(0, 1)
Mon May 31 00:14:45 2021[1,0]<stderr>:
Mon May 31 00:14:47 2021[1,0]<stderr>:2021-05-31 00:14:47,006 - mmseg - INFO - Use load_from_openmmlab loader
Mon May 31 00:14:47 2021[1,0]<stderr>:Downloading: "https://download.openmmlab.com/pretrain/third_party/resnet50_v1c-2cccc1ad.pth" to /root/.cache/torch/checkpoints/resnet50_v1c-2cccc1ad.pth
Mon May 31 00:14:48 2021[1,0]<stderr>:
  0%|          | 0.00/97.8M [00:00<?, ?B/s]Mon May 31 00:14:48 2021[1,0]<stderr>:
  0%|          | 16.0k/97.8M [00:00<21:23, 79.9kB/s]Mon May 31 00:14:48 2021[1,0]<stderr>:
  0%|          | 40.0k/97.8M [00:00<19:26, 87.9kB/s]Mon May 31 00:14:49 2021[1,0]<stderr>:
  0%|          | 96.0k/97.8M [00:00<15:31, 110kB/s] Mon May 31 00:14:49 2021[1,0]<stderr>:
  0%|          | 208k/97.8M [00:00<11:49, 144kB/s] Mon May 31 00:14:49 2021[1,0]<stderr>:
  0%|          | 432k/97.8M [00:01<08:44, 195kB/s]Mon May 31 00:14:49 2021[1,0]<stderr>:
  1%|          | 872k/97.8M [00:01<06:20, 267kB/s]Mon May 31 00:14:49 2021[1,0]<stderr>:
  2%|▏         | 1.71M/97.8M [00:01<04:30, 372kB/s]Mon May 31 00:14:50 2021[1,0]<stderr>:
  3%|▎         | 3.07M/97.8M [00:01<03:11, 519kB/s]Mon May 31 00:14:50 2021[1,0]<stderr>:
  5%|▍         | 4.43M/97.8M [00:01<02:16, 717kB/s]Mon May 31 00:14:50 2021[1,0]<stderr>:
  6%|▌         | 5.78M/97.8M [00:02<01:38, 978kB/s]Mon May 31 00:14:50 2021[1,0]<stderr>:
  7%|▋         | 7.14M/97.8M [00:02<01:12, 1.31MB/s]Mon May 31 00:14:50 2021[1,0]<stderr>:
  9%|▊         | 8.50M/97.8M [00:02<00:54, 1.73MB/s]Mon May 31 00:14:51 2021[1,0]<stderr>:
 10%|█         | 9.86M/97.8M [00:02<00:41, 2.22MB/s]Mon May 31 00:14:51 2021[1,0]<stderr>:
 11%|█▏        | 11.2M/97.8M [00:03<00:32, 2.77MB/s]Mon May 31 00:14:51 2021[1,0]<stderr>:
 13%|█▎        | 12.6M/97.8M [00:03<00:26, 3.35MB/s]Mon May 31 00:14:51 2021[1,0]<stderr>:
 14%|█▍        | 13.9M/97.8M [00:03<00:22, 3.93MB/s]Mon May 31 00:14:52 2021[1,0]<stderr>:
 16%|█▌        | 15.3M/97.8M [00:03<00:19, 4.49MB/s]Mon May 31 00:14:52 2021[1,0]<stderr>:
 17%|█▋        | 16.7M/97.8M [00:03<00:17, 4.95MB/s]Mon May 31 00:14:52 2021[1,0]<stderr>:
 18%|█▊        | 18.0M/97.8M [00:04<00:15, 5.35MB/s]Mon May 31 00:14:52 2021[1,0]<stderr>:
 20%|█▉        | 19.4M/97.8M [00:04<00:14, 5.68MB/s]Mon May 31 00:14:52 2021[1,0]<stderr>:
 21%|██        | 20.8M/97.8M [00:04<00:13, 5.96MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 23%|██▎       | 22.1M/97.8M [00:04<00:12, 6.15MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 24%|██▎       | 23.2M/97.8M [00:04<00:11, 6.99MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 24%|██▍       | 23.9M/97.8M [00:04<00:12, 6.38MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 25%|██▌       | 24.6M/97.8M [00:05<00:11, 6.64MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 26%|██▌       | 25.3M/97.8M [00:05<00:11, 6.44MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 27%|██▋       | 26.0M/97.8M [00:05<00:11, 6.63MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 27%|██▋       | 26.7M/97.8M [00:05<00:11, 6.53MB/s]Mon May 31 00:14:53 2021[1,0]<stderr>:
 28%|██▊       | 27.4M/97.8M [00:05<00:11, 6.71MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 29%|██▊       | 28.1M/97.8M [00:05<00:11, 6.59MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 29%|██▉       | 28.8M/97.8M [00:05<00:10, 6.79MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 30%|███       | 29.5M/97.8M [00:05<00:10, 6.63MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 31%|███       | 30.2M/97.8M [00:05<00:10, 6.81MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 32%|███▏      | 30.9M/97.8M [00:06<00:10, 6.67MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 32%|███▏      | 31.6M/97.8M [00:06<00:10, 6.86MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 33%|███▎      | 32.3M/97.8M [00:06<00:10, 6.70MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 34%|███▍      | 33.0M/97.8M [00:06<00:09, 6.89MB/s]Mon May 31 00:14:54 2021[1,0]<stderr>:
 34%|███▍      | 33.7M/97.8M [00:06<00:09, 6.73MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 35%|███▌      | 34.5M/97.8M [00:06<00:09, 6.94MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 36%|███▌      | 35.1M/97.8M [00:06<00:09, 6.79MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 37%|███▋      | 35.9M/97.8M [00:06<00:09, 6.98MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 37%|███▋      | 36.6M/97.8M [00:06<00:09, 6.82MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 38%|███▊      | 37.3M/97.8M [00:07<00:09, 7.02MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 39%|███▉      | 38.0M/97.8M [00:07<00:09, 6.86MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 40%|███▉      | 38.8M/97.8M [00:07<00:08, 7.08MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 40%|████      | 39.5M/97.8M [00:07<00:08, 6.92MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 41%|████      | 40.3M/97.8M [00:07<00:08, 7.13MB/s]Mon May 31 00:14:55 2021[1,0]<stderr>:
 42%|████▏     | 41.0M/97.8M [00:07<00:08, 6.97MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 43%|████▎     | 41.8M/97.8M [00:07<00:08, 7.33MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 43%|████▎     | 42.5M/97.8M [00:07<00:08, 7.00MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 44%|████▍     | 43.2M/97.8M [00:07<00:07, 7.23MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 45%|████▍     | 44.0M/97.8M [00:08<00:08, 7.06MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 46%|████▌     | 44.8M/97.8M [00:08<00:07, 7.27MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 46%|████▋     | 45.5M/97.8M [00:08<00:07, 7.14MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 47%|████▋     | 46.3M/97.8M [00:08<00:07, 7.37MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 48%|████▊     | 47.0M/97.8M [00:08<00:07, 7.23MB/s]Mon May 31 00:14:56 2021[1,0]<stderr>:
 49%|████▉     | 47.8M/97.8M [00:08<00:07, 7.46MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 50%|████▉     | 48.6M/97.8M [00:08<00:07, 7.31MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 51%|█████     | 49.4M/97.8M [00:08<00:06, 7.54MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 51%|█████▏    | 50.1M/97.8M [00:08<00:06, 7.40MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 52%|█████▏    | 51.0M/97.8M [00:09<00:06, 7.64MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 53%|█████▎    | 51.7M/97.8M [00:09<00:06, 7.48MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 54%|█████▍    | 52.6M/97.8M [00:09<00:06, 7.78MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 55%|█████▍    | 53.3M/97.8M [00:09<00:06, 7.57MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 55%|█████▌    | 54.2M/97.8M [00:09<00:05, 7.87MB/s]Mon May 31 00:14:57 2021[1,0]<stderr>:
 56%|█████▌    | 55.0M/97.8M [00:09<00:05, 7.66MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 57%|█████▋    | 55.9M/97.8M [00:09<00:05, 7.90MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 58%|█████▊    | 56.6M/97.8M [00:09<00:05, 7.77MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 59%|█████▉    | 57.5M/97.8M [00:09<00:05, 8.08MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 60%|█████▉    | 58.3M/97.8M [00:09<00:05, 7.87MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 61%|██████    | 59.2M/97.8M [00:10<00:04, 8.20MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 61%|██████▏   | 60.0M/97.8M [00:10<00:04, 7.97MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 62%|██████▏   | 60.9M/97.8M [00:10<00:04, 8.31MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 63%|██████▎   | 61.7M/97.8M [00:10<00:04, 8.06MB/s]Mon May 31 00:14:58 2021[1,0]<stderr>:
 64%|██████▍   | 62.7M/97.8M [00:10<00:04, 8.44MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 65%|██████▍   | 63.5M/97.8M [00:10<00:04, 8.19MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 66%|██████▌   | 64.5M/97.8M [00:10<00:04, 8.57MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 67%|██████▋   | 65.3M/97.8M [00:10<00:04, 8.33MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 68%|██████▊   | 66.3M/97.8M [00:10<00:03, 8.72MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 69%|██████▊   | 67.1M/97.8M [00:11<00:03, 8.45MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 70%|██████▉   | 68.1M/97.8M [00:11<00:03, 8.86MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 71%|███████   | 69.0M/97.8M [00:11<00:03, 8.62MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 72%|███████▏  | 70.0M/97.8M [00:11<00:03, 9.01MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 72%|███████▏  | 70.9M/97.8M [00:11<00:03, 8.75MB/s]Mon May 31 00:14:59 2021[1,0]<stderr>:
 73%|███████▎  | 71.9M/97.8M [00:11<00:02, 9.16MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 74%|███████▍  | 72.8M/97.8M [00:11<00:02, 8.94MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 75%|███████▌  | 73.8M/97.8M [00:11<00:02, 9.28MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 76%|███████▋  | 74.7M/97.8M [00:11<00:02, 9.12MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 78%|███████▊  | 75.8M/97.8M [00:12<00:02, 9.48MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 78%|███████▊  | 76.7M/97.8M [00:12<00:02, 9.31MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 80%|███████▉  | 77.8M/97.8M [00:12<00:02, 9.68MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 81%|████████  | 78.8M/97.8M [00:12<00:02, 9.51MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 82%|████████▏ | 79.9M/97.8M [00:12<00:01, 9.88MB/s]Mon May 31 00:15:00 2021[1,0]<stderr>:
 83%|████████▎ | 80.9M/97.8M [00:12<00:01, 9.67MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 84%|████████▍ | 82.0M/97.8M [00:12<00:01, 10.1MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 85%|████████▍ | 83.0M/97.8M [00:12<00:01, 9.90MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 86%|████████▌ | 84.2M/97.8M [00:12<00:01, 10.4MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 87%|████████▋ | 85.2M/97.8M [00:13<00:01, 10.1MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 88%|████████▊ | 86.4M/97.8M [00:13<00:01, 10.6MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 89%|████████▉ | 87.4M/97.8M [00:13<00:01, 10.3MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 91%|█████████ | 88.6M/97.8M [00:13<00:00, 10.8MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 92%|█████████▏| 89.7M/97.8M [00:13<00:00, 10.5MB/s]Mon May 31 00:15:01 2021[1,0]<stderr>:
 93%|█████████▎| 90.9M/97.8M [00:13<00:00, 11.0MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
 94%|█████████▍| 92.0M/97.8M [00:13<00:00, 10.7MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
 95%|█████████▌| 93.2M/97.8M [00:13<00:00, 11.3MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
 96%|█████████▋| 94.3M/97.8M [00:13<00:00, 10.9MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
 98%|█████████▊| 95.6M/97.8M [00:13<00:00, 11.4MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
 99%|█████████▉| 96.7M/97.8M [00:14<00:00, 11.0MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
100%|██████████| 97.8M/97.8M [00:14<00:00, 7.24MB/s]Mon May 31 00:15:02 2021[1,0]<stderr>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:NCCL version 2.7.5+cuda11.0
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:04 2021[1,0]<stdout>:
Mon May 31 00:15:06 2021[1,0]<stderr>:2021-05-31 00:15:06,157 - mmseg - WARNING - The model and loaded state dict do not match exactly
Mon May 31 00:15:06 2021[1,0]<stderr>:
Mon May 31 00:15:06 2021[1,0]<stderr>:unexpected key in source state_dict: fc.weight, fc.bias
Mon May 31 00:15:06 2021[1,0]<stderr>:
Mon May 31 00:15:06 2021[1,0]<stderr>:2021-05-31 00:15:06,163 - mmseg - INFO - EncoderDecoder(
Mon May 31 00:15:06 2021[1,0]<stderr>:  (backbone): ResNetV1c(
Mon May 31 00:15:06 2021[1,0]<stderr>:    (stem): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (5): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (7): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (8): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:    (layer1): ResLayer(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (downsample): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (layer2): ResLayer(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (downsample): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        Mon May 31 00:15:06 2021[1,0]<stderr>:(bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (3): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (layer3): ResLayer(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (downsample): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (3): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, trackMon May 31 00:15:06 2021[1,0]<stderr>:_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (4): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (5): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (layer4): ResLayer(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (downsample): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): Bottleneck(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (relu): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:  )
Mon May 31 00:15:06 2021[1,0]<stderr>:  (decode_head): DepthwiseSeparableASPPHead(
Mon May 31 00:15:06 2021[1,0]<stderr>:    input_transform=None, ignore_index=255, align_corners=False
Mon May 31 00:15:06 2021[1,0]<stderr>:    (loss_decode): CrossEntropyLoss()
Mon May 31 00:15:06 2021[1,0]<stderr>:    (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
Mon May 31 00:15:06 2021[1,0]<stderr>:    (dropout): Dropout2d(p=0.1, inplace=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:    (image_pool): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): AdaptiveAvgPool2d(output_size=1)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv): Conv2d(2048, 512, Mon May 31 00:15:06 2021[1,0]<stderr>:kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (aspp_modules): DepthwiseSeparableASPPModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): DepthwiseSeparableConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (depthwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:        (pointwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (2): DepthwiseSeparableConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (depthwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24), groups=2048, bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:        (pointwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (3): DepthwiseSeparableConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (depthwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(36, 36), dilation=(36, 36), groups=2048, bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:        (pointwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (bottleneck): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (conv): Conv2d(2560, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (c1_bottleneck): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (conv): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (bn): SyncBatchNorm(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:    (sep_bottleneck): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): DepthwiseSeparableConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (depthwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(560, 560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=560, bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:        (pointwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:      (1): DepthwiseSeparableConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (depthwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:        (pointwise_conv): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (bn): SyncBatchNorm(512, eps=1e-05, Mon May 31 00:15:06 2021[1,0]<stderr>:momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:          (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        )
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:  )
Mon May 31 00:15:06 2021[1,0]<stderr>:  (auxiliary_head): FCNHead(
Mon May 31 00:15:06 2021[1,0]<stderr>:    input_transform=None, ignore_index=255, align_corners=False
Mon May 31 00:15:06 2021[1,0]<stderr>:    (loss_decode): CrossEntropyLoss()
Mon May 31 00:15:06 2021[1,0]<stderr>:    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
Mon May 31 00:15:06 2021[1,0]<stderr>:    (dropout): Dropout2d(p=0.1, inplace=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:    (convs): Sequential(
Mon May 31 00:15:06 2021[1,0]<stderr>:      (0): ConvModule(
Mon May 31 00:15:06 2021[1,0]<stderr>:        (conv): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:        (activate): ReLU(inplace=True)
Mon May 31 00:15:06 2021[1,0]<stderr>:      )
Mon May 31 00:15:06 2021[1,0]<stderr>:    )
Mon May 31 00:15:06 2021[1,0]<stderr>:  )
Mon May 31 00:15:06 2021[1,0]<stderr>:)
Mon May 31 00:15:06 2021[1,0]<stderr>:2021-05-31 00:15:06,242 - mmseg - INFO - Loaded 2975 images
Mon May 31 00:15:06 2021[1,0]<stderr>:2021-05-31 00:15:06,832 - mmseg - INFO - Start running, host: root@localhost, work_dir: /root/paddlejob/workspace/env_run/mmsegmentation/work_dirs/deeplabv3plus_r50-d8_512x1024_80k_cityscapes
Mon May 31 00:15:06 2021[1,0]<stderr>:2021-05-31 00:15:06,832 - mmseg - INFO - workflow: [('train', 1)], max: 20 iters
Mon May 31 00:15:42 2021[1,0]<stderr>:2021-05-31 00:15:42,819 - mmseg - INFO - Iter [1/20]	lr: 1.000e-02, eta: 0:05:29, time: 17.349, data_time: 0.553, memory: 19355, decode.loss_seg: 2.8647, decode.acc_seg: 3.2374, aux.loss_seg: 1.1353, aux.acc_seg: 5.4121, loss: 3.9999
Mon May 31 00:15:43 2021[1,0]<stderr>:2021-05-31 00:15:43,862 - mmseg - INFO - Iter [2/20]	lr: 9.553e-03, eta: 0:02:45, time: 1.048, data_time: 0.023, memory: 19355, decode.loss_seg: 2.6644, decode.acc_seg: 13.8875, aux.loss_seg: 1.0794, aux.acc_seg: 7.7474, loss: 3.7439
Mon May 31 00:15:44 2021[1,0]<stderr>:2021-05-31 00:15:44,869 - mmseg - INFO - Iter [3/20]	lr: 9.104e-03, eta: 0:01:49, time: 1.006, data_time: 0.019, memory: 19355, decode.loss_seg: 2.5862, decode.acc_seg: 27.5977, aux.loss_seg: 1.1035, aux.acc_seg: 12.3890, loss: 3.6897
Mon May 31 00:15:45 2021[1,0]<stderr>:2021-05-31 00:15:45,864 - mmseg - INFO - Iter [4/20]	lr: 8.653e-03, eta: 0:01:21, time: 0.995, data_time: 0.018, memory: 19355, decode.loss_seg: 2.2890, decode.acc_seg: 29.8233, aux.loss_seg: 1.0340, aux.acc_seg: 18.2622, loss: 3.3230
Mon May 31 00:15:46 2021[1,0]<stderr>:2021-05-31 00:15:46,848 - mmseg - INFO - Iter [5/20]	lr: 8.199e-03, eta: 0:01:04, time: 0.984, data_time: 0.017, memory: 19355, decode.loss_seg: 2.3171, decode.acc_seg: 30.4320, aux.loss_seg: 1.0847, aux.acc_seg: 26.7364, loss: 3.4018
Mon May 31 00:15:47 2021[1,0]<stderr>:2021-05-31 00:15:47,841 - mmseg - INFO - Iter [6/20]	lr: 7.742e-03, eta: 0:00:52, time: 0.993, data_time: 0.018, memory: 19355, decode.loss_seg: 2.0882, decode.acc_seg: 27.3490, aux.loss_seg: 1.0160, aux.acc_seg: 28.7259, loss: 3.1042
Mon May 31 00:15:48 2021[1,0]<stderr>:2021-05-31 00:15:48,825 - mmseg - INFO - Iter [7/20]	lr: 7.282e-03, eta: 0:00:43, time: 0.984, data_time: 0.018, memory: 19355, decode.loss_seg: 1.8300, decode.acc_seg: 27.2343, aux.loss_seg: 0.9199, aux.acc_seg: 29.0575, loss: 2.7499
Mon May 31 00:15:49 2021[1,0]<stderr>:2021-05-31 00:15:49,815 - mmseg - INFO - Iter [8/20]	lr: 6.818e-03, eta: 0:00:36, time: 0.990, data_time: 0.020, memory: 19355, decode.loss_seg: 1.9670, decode.acc_seg: 32.9981, aux.loss_seg: 0.9941, aux.acc_seg: 33.6735, loss: 2.9611
Mon May 31 00:15:50 2021[1,0]<stderr>:2021-05-31 00:15:50,803 - mmseg - INFO - Iter [9/20]	lr: 6.351e-03, eta: 0:00:30, time: 0.989, data_time: 0.017, memory: 19355, decode.loss_seg: 2.0625, decode.acc_seg: 29.2924, aux.loss_seg: 0.9782, aux.acc_seg: 29.4269, loss: 3.0406
Mon May 31 00:15:51 2021[1,0]<stderr>:2021-05-31 00:15:51,806 - mmseg - INFO - Iter [10/20]	lr: 5.880e-03, eta: 0:00:26, time: 1.002, data_time: 0.017, memory: 19355, decode.loss_seg: 2.1455, decode.acc_seg: 22.7668, aux.loss_seg: 0.9823, aux.acc_seg: 25.3879, loss: 3.1277
Mon May 31 00:15:52 2021[1,0]<stderr>:2021-05-31 00:15:52,785 - mmseg - INFO - Iter [11/20]	lr: 5.405e-03, eta: 0:00:22, time: 0.979, data_time: 0.018, memory: 19355, decode.loss_seg: 2.1132, decode.acc_seg: 27.2795, aux.loss_seg: 0.9600, aux.acc_seg: 29.9535, loss: 3.0732
Mon May 31 00:15:53 2021[1,0]<stderr>:2021-05-31 00:15:53,786 - mmseg - INFO - Iter [12/20]	lr: 4.925e-03, eta: 0:00:18, time: 1.001, data_time: 0.018, memory: 19355, decode.loss_seg: 1.9622, decode.acc_seg: 36.1708, aux.loss_seg: 0.9305, aux.acc_seg: 35.8916, loss: 2.8927
Mon May 31 00:15:54 2021[1,0]<stderr>:2021-05-31 00:15:54,780 - mmseg - INFO - Iter [13/20]	lr: 4.440e-03, eta: 0:00:15, time: 0.994, data_time: 0.018, memory: 19355, decode.loss_seg: 1.8148, decode.acc_seg: 34.7293, aux.loss_seg: 0.8745, aux.acc_seg: 33.4001, loss: 2.6893
Mon May 31 00:15:55 2021[1,0]<stderr>:2021-05-31 00:15:55,778 - mmseg - INFO - Iter [14/20]	lr: 3.949e-03, eta: 0:00:12, time: 0.997, data_time: 0.017, memory: 19355, decode.loss_seg: 1.9701, decode.acc_seg: 34.4504, aux.loss_seg: 0.9155, aux.acc_seg: 29.7447, loss: 2.8856
Mon May 31 00:15:56 2021[1,0]<stderr>:2021-05-31 00:15:56,770 - mmseg - INFO - Iter [15/20]	lr: 3.450e-03, eta: 0:00:10, time: 0.993, data_time: 0.017, memory: 19355, decode.loss_seg: 2.1407, decode.acc_seg: 29.3930, aux.loss_seg: 0.9422, aux.acc_seg: 22.6193, loss: 3.0829
Mon May 31 00:15:57 2021[1,0]<stderr>:2021-05-31 00:15:57,773 - mmseg - INFO - Iter [16/20]	lr: 2.943e-03, eta: 0:00:08, time: 1.002, data_time: 0.019, memory: 19355, decode.loss_seg: 1.8520, decode.acc_seg: 37.7165, aux.loss_seg: 0.8779, aux.acc_seg: 31.2371, loss: 2.7299
Mon May 31 00:15:58 2021[1,0]<stderr>:2021-05-31 00:15:58,765 - mmseg - INFO - Iter [17/20]	lr: 2.426e-03, eta: 0:00:05, time: 0.992, data_time: 0.017, memory: 19355, decode.loss_seg: 1.9589, decode.acc_seg: 34.7381, aux.loss_seg: 0.8911, aux.acc_seg: 26.7665, loss: 2.8500
Mon May 31 00:15:59 2021[1,0]<stderr>:2021-05-31 00:15:59,755 - mmseg - INFO - Iter [18/20]	lr: 1.895e-03, eta: 0:00:03, time: 0.990, data_time: 0.016, memory: 19355, decode.loss_seg: 1.9343, decode.acc_seg: 35.3211, aux.loss_seg: 0.8893, aux.acc_seg: 23.8234, loss: 2.8236
Mon May 31 00:16:00 2021[1,0]<stderr>:2021-05-31 00:16:00,742 - mmseg - INFO - Iter [19/20]	lr: 1.346e-03, eta: 0:00:01, time: 0.987, data_time: 0.018, memory: 19355, decode.loss_seg: 1.7829, decode.acc_seg: 32.0531, aux.loss_seg: 0.8406, aux.acc_seg: 23.2098, loss: 2.6235
Mon May 31 00:16:01 2021[1,0]<stderr>:2021-05-31 00:16:01,728 - mmseg - INFO - Iter [20/20]	lr: 7.679e-04, eta: 0:00:00, time: 0.987, data_time: 0.019, memory: 19355, decode.loss_seg: 1.8064, decode.acc_seg: 37.3542, aux.loss_seg: 0.8281, aux.acc_seg: 28.6298, loss: 2.6345
