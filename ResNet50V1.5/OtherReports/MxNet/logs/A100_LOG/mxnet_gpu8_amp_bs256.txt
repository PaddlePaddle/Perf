[1,0]<stdout>:DLL 2023-01-07 06:31:33.613160 - PARAMETER arch : resnetv15  num_layers : 50  num_groups : 32  num_classes : 1000  batchnorm_eps : 1e-05  batchnorm_mom : 0.9  fuse_bn_relu : 1  fuse_bn_add_relu : 1  mode : train  seed : None  gpus : [0, 1, 2, 3, 4, 5, 6, 7]  kv_store : horovod  dtype : float16  amp : False  batch_size : 2048  num_epochs : 3  run_epochs : -1  lr : 2.048  lr_schedule : cosine  lr_factor : 0.256  lr_steps : []  warmup_epochs : 5  optimizer : sgd  mom : 0.875  wd : 3.0517578125e-05  label_smoothing : 0.1  mixup : 0  disp_batches : 20  model_prefix : model  save_frequency : -1  begin_epoch : 0  load : None  test_io : False  test_io_mode : train  log : log.log  dllogger_log : benchmark_report_fp16.json-8,256  workspace : ./  logdir : None  no_metrics : True  benchmark_iters : 500  data_train : /data/imagenet/train-val-recordio-passthrough/train.rec  data_train_idx : /data/imagenet/train-val-recordio-passthrough/train.idx  data_val : /data/imagenet/train-val-recordio-passthrough/val.rec  data_val_idx : /data/imagenet/train-val-recordio-passthrough/val.idx  data_pred : None  data_backend : dali-gpu  image_shape : [4, 224, 224]  rgb_mean : [123.68, 116.779, 103.939]  rgb_std : [58.393, 57.12, 57.375]  input_layout : NCHW  conv_layout : NHWC  batchnorm_layout : NHWC  pooling_layout : NHWC  num_examples : 32000  data_val_resize : 256  dali_separ_val : False  dali_threads : 4  dali_validation_threads : 10  dali_prefetch_queue : 2  dali_nvjpeg_memory_padding : 64  dali_fuse_decoder : 1  dali_nvjpeg_width_hint : 5980  dali_nvjpeg_height_hint : 6430  dali_dont_use_mmap : False  data_mxnet_threads : 40  random_crop : 0  random_mirror : 1  max_random_h : 0  max_random_s : 0  max_random_l : 0  min_random_aspect_ratio : 0.75  max_random_aspect_ratio : 1.33  max_random_rotate_angle : 0  max_random_shear_ratio : 0  max_random_scale : 1  min_random_scale : 1  max_random_area : 1  min_random_area : 0.05  min_crop_size : -1  max_crop_size : -1  brightness : 0  contrast : 0  saturation : 0  pca_noise : 0  random_resized_crop : 1 
[1,4]<stderr>:[06:31:42] ../src/storage/storage.cc:[1,4]<stderr>:199: Using Pooled (Naive) StorageManager for GPU
[1,4]<stderr>:[[1,4]<stderr>:06:31:42] ../src/storage/storage.cc[1,4]<stderr>::199: Using Pooled (Naive) StorageManager for CPU
[1,4]<stderr>:2023-01-07 06:31:42,068:INFO: starting epoch 0
[1,2]<stderr>:[06:31:42] ../src/storage/storage.cc:[1,2]<stderr>:199: Using Pooled (Naive) StorageManager for GPU
[1,2]<stderr>:[[1,2]<stderr>:06:31:42] ../src/storage/storage.cc:199: Using Pooled (Naive)[1,2]<stderr>: StorageManager for CPU
[1,0]<stderr>:[06:31:42] [1,0]<stderr>:../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[1,2]<stderr>:2023-01-07 06:31:42,156:INFO: starting epoch 0
[1,6]<stderr>:[[1,6]<stderr>:06:31:42[1,6]<stderr>:] [1,6]<stderr>:../src/storage/storage.cc[1,6]<stderr>::[1,6]<stderr>:199[1,6]<stderr>:: [1,6]<stderr>:Using [1,6]<stderr>:Pooled (Naive)[1,6]<stderr>: StorageManager for [1,6]<stderr>:GPU[1,6]<stderr>:
[1,0]<stderr>:[[1,0]<stderr>:06:31:42[1,0]<stderr>:] ../src/storage/storage.cc:199[1,0]<stderr>:: Using Pooled (Naive) StorageManager for CPU
[1,6]<stderr>:[06:31:42[1,6]<stderr>:] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU[1,6]<stderr>:
[1,0]<stderr>:2023-01-07 06:31:42,198:INFO: starting epoch 0
[1,6]<stderr>:2023-01-07 06:31:42,207:INFO: starting epoch 0
[1,7]<stderr>:[[1,7]<stderr>:06:31:42[1,7]<stderr>:] [1,7]<stderr>:../src/storage/storage.cc[1,7]<stderr>::[1,7]<stderr>:199[1,7]<stderr>:: [1,7]<stderr>:Using [1,7]<stderr>:Pooled (Naive)[1,7]<stderr>: StorageManager for [1,7]<stderr>:GPU[1,7]<stderr>:
[1,7]<stderr>:[06:31:42] ../src/storage/storage.cc:199: Using [1,7]<stderr>:Pooled (Naive) StorageManager for CPU
[1,7]<stderr>:2023-01-07 06:31:42,553:INFO: starting epoch 0
[1,5]<stderr>:[[1,5]<stderr>:06:31:42[1,5]<stderr>:] [1,5]<stderr>:../src/storage/storage.cc[1,5]<stderr>::[1,5]<stderr>:199[1,5]<stderr>:: [1,5]<stderr>:Using [1,5]<stderr>:Pooled (Naive)[1,5]<stderr>: StorageManager for [1,5]<stderr>:GPU[1,5]<stderr>:
[1,3]<stderr>:[06:31:42] ../src/storage/storage.cc:[1,3]<stderr>:199: Using Pooled (Naive) StorageManager for GPU
[1,5]<stderr>:[06:31:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for [1,5]<stderr>:CPU
[1,3]<stderr>:[06:31:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[1,1]<stderr>:[06:31:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[1,5]<stderr>:2023-01-07 06:31:42,651:INFO: starting epoch 0
[1,3]<stderr>:2023-01-07 06:31:42,664:INFO: starting epoch 0
[1,1]<stderr>:[06:31:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[1,1]<stderr>:2023-01-07 06:31:42,682:INFO: starting epoch 0
[1,0]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,0]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,0]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,0]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,0]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,0]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,0]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,0]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,0]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,0]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,0]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,0]<stderr>:  _iterator_deprecation_warning()
[1,0]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,0]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,0]<stderr>:2023-01-07 06:31:49,636:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,0]<stderr>:2023-01-07 06:31:49,637:INFO: Starting epoch 0
[1,4]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,4]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,4]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,4]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,4]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,4]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,4]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,4]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,4]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,4]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,4]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,4]<stderr>:  _iterator_deprecation_warning()
[1,4]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,4]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,4]<stderr>:2023-01-07 06:31:49,865:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,4]<stderr>:2023-01-07 06:31:49,866:INFO: Starting epoch 0
[1,2]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,2]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,2]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,2]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,2]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,2]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,2]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,2]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,2]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,2]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,2]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,2]<stderr>:  _iterator_deprecation_warning()
[1,2]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,2]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,2]<stderr>:2023-01-07 06:31:49,869:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,2]<stderr>:2023-01-07 06:31:49,869:INFO: Starting epoch 0
[1,6]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,6]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,6]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,6]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,6]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,6]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,6]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,6]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,6]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,6]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,6]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,6]<stderr>:  _iterator_deprecation_warning()
[1,6]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,6]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,6]<stderr>:2023-01-07 06:31:49,924:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,6]<stderr>:2023-01-07 06:31:49,924:INFO: Starting epoch 0
[1,5]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,5]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,5]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,5]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,5]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,5]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,5]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,5]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,5]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,5]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,5]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,5]<stderr>:  _iterator_deprecation_warning()
[1,5]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,5]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,5]<stderr>:2023-01-07 06:31:50,540:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,5]<stderr>:2023-01-07 06:31:50,540:INFO: Starting epoch 0
[1,7]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,7]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,7]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,7]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,7]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,7]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,7]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,7]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,7]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,7]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,7]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,7]<stderr>:  _iterator_deprecation_warning()
[1,7]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,7]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,7]<stderr>:2023-01-07 06:31:50,757:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,7]<stderr>:2023-01-07 06:31:50,758:INFO: Starting epoch 0
[1,3]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,3]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,3]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,3]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,3]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,3]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,3]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,3]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,3]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,3]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,3]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,3]<stderr>:  _iterator_deprecation_warning()
[1,3]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,3]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,3]<stderr>:2023-01-07 06:31:51,633:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,3]<stderr>:2023-01-07 06:31:51,633:INFO: Starting epoch 0
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 15409, errno = 1
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 17665, errno = 1
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 7073, errno = 1
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 11513, errno = 1
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 7401, errno = 1
[1,1]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,1]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,1]<stderr>:/workspace/rn50/dali.py:83: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,1]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,1]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'output_dtype' for operator 'CropMirrorNormalize' is now deprecated. Use 'dtype' instead.
[1,1]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,1]<stderr>:/workspace/rn50/dali.py:128: DeprecationWarning: Argument 'image_type' for operator 'CropMirrorNormalize' is now deprecated. The argument is no longer used and should be removed.
[1,1]<stderr>:  self.cmnp = ops.CropMirrorNormalize(device="gpu",
[1,1]<stderr>:/workspace/rn50/dali.py:209: UserWarning: 32000 training examples will be used, although full training set contains 1281167 examples
[1,1]<stderr>:  warnings.warn("{} training examples will be used, although full training set contains {} examples".format(args.num_examples, trainpipes[0].epoch_size("Reader")))
[1,1]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/base_iterator.py:156: Warning: Please set `reader_name` and don't set last_batch_padded and size manually  whenever possible. This may lead, in some situations, to miss some  samples or return duplicated ones. Check the Sharding section of the documentation for more details.
[1,1]<stderr>:  _iterator_deprecation_warning()
[1,1]<stderr>:/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:84: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
[1,1]<stderr>:  _DaliBaseIterator.__init__(self, pipelines, size, reader_name, auto_reset,
[1,1]<stderr>:2023-01-07 06:31:52,963:WARNING: DALI iterator does not support resetting while epoch is not finished. Ignoring...
[1,1]<stderr>:2023-01-07 06:31:52,963:INFO: Starting epoch 0
[1,0]<stderr>:[5c4067e65362:25786] Read -1, expected 4737, errno = 1
[1,2]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,5]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:[1,5]<stderr>:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,4]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,0]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,6]<stderr>:[[1,6]<stderr>:06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: [1,6]<stderr>:Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,7]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:[1,7]<stderr>:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,1]<stderr>:[06:31:58] [1,1]<stderr>:../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,3]<stderr>:[06:31:58] ../src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:120: [1,3]<stderr>:Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[1,0]<stdout>:DLL 2023-01-07 06:32:12.705151 - Epoch: 0 Iteration: 19  train.loss : 6.953149199485779  train.ips : 1775.597456299816 images/s train.lr : 0.4864 
[1,0]<stdout>:DLL 2023-01-07 06:32:14.929901 - Epoch: 0 Iteration: 39  train.loss : 6.683324098587036  train.ips : 18414.224361346856 images/s train.lr : 0.9984 
[1,0]<stdout>:DLL 2023-01-07 06:32:17.171860 - Epoch: 0 Iteration: 59  train.loss : 6.571941351890564  train.ips : 18273.165464985934 images/s train.lr : 1.5104000000000002 
[1,0]<stdout>:DLL 2023-01-07 06:32:19.314482 - Epoch: 0 Iteration: 79  train.loss : 6.428060078620911  train.ips : 19120.315427507576 images/s train.lr : 2.0224 
[1,0]<stdout>:DLL 2023-01-07 06:32:21.554064 - Epoch: 0 Iteration: 99  train.loss : 6.375808763504028  train.ips : 18291.005711670867 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:23.793790 - Epoch: 0 Iteration: 119  train.loss : 6.359197735786438  train.ips : 18291.060239052564 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:26.039632 - Epoch: 0 Iteration: 139  train.loss : 6.374511933326721  train.ips : 18242.690135567154 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:28.200357 - Epoch: 0 Iteration: 159  train.loss : 6.3568648338317875  train.ips : 18961.601784125927 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:30.342300 - Epoch: 0 Iteration: 179  train.loss : 6.361808657646179  train.ips : 19125.300487142256 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:32.531745 - Epoch: 0 Iteration: 199  train.loss : 6.3494731187820435  train.ips : 18711.176935456187 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:34.613151 - Epoch: 0 Iteration: 219  train.loss : 6.3460596084594725  train.ips : 19681.833728481422 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:36.745570 - Epoch: 0 Iteration: 239  train.loss : 6.382708811759949  train.ips : 19213.885710285056 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:38.919823 - Epoch: 0 Iteration: 259  train.loss : 6.350337123870849  train.ips : 18844.712881391704 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:41.168402 - Epoch: 0 Iteration: 279  train.loss : 6.367315936088562  train.ips : 18219.847126046458 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:43.299599 - Epoch: 0 Iteration: 299  train.loss : 6.343808698654175  train.ips : 19223.883164449824 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:45.457438 - Epoch: 0 Iteration: 319  train.loss : 6.3448961734771725  train.ips : 18985.67452979431 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:47.599386 - Epoch: 0 Iteration: 339  train.loss : 6.342245721817017  train.ips : 19127.472418876576 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:49.811086 - Epoch: 0 Iteration: 359  train.loss : 6.3705531597137455  train.ips : 18522.360620600837 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:51.981880 - Epoch: 0 Iteration: 379  train.loss : 6.378339862823486  train.ips : 18872.59984565655 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:54.074126 - Epoch: 0 Iteration: 399  train.loss : 6.360058689117432  train.ips : 19579.33198184009 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:56.204989 - Epoch: 0 Iteration: 419  train.loss : 6.362118196487427  train.ips : 19228.597399687347 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:32:58.356542 - Epoch: 0 Iteration: 439  train.loss : 6.3790792465209964  train.ips : 19042.729954630737 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:00.495223 - Epoch: 0 Iteration: 459  train.loss : 6.362093281745911  train.ips : 19163.985603922243 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:02.582325 - Epoch: 0 Iteration: 479  train.loss : 6.363354516029358  train.ips : 19628.21185514178 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:04.646442 - Epoch: 0 Iteration: 499  train.loss : 6.3754877090454105  train.ips : 19848.72015679453 images/s train.lr : 0 
[1,4]<stderr>:2023-01-07 06:33:04,777:INFO: Starting epoch 1
[1,0]<stdout>:DLL 2023-01-07 06:33:04.781106 - Epoch: 0  train.loss : 6.409703860282898  train.ips : 18966.327368074155 images/s
[1,0]<stderr>:2023-01-07 06:33:04,781:INFO: Starting epoch 1
[1,6]<stderr>:2023-01-07 06:33:04,801:INFO: Starting epoch 1
[1,2]<stderr>:2023-01-07 06:33:04,804:INFO: Starting epoch 1
[1,7]<stderr>:2023-01-07 06:33:04,806:INFO: Starting epoch 1
[1,1]<stderr>:2023-01-07 06:33:04,812:INFO: Starting epoch 1
[1,5]<stderr>:2023-01-07 06:33:04,820:INFO: Starting epoch 1
[1,3]<stderr>:2023-01-07 06:33:04,843:INFO: Starting epoch 1
[1,0]<stdout>:DLL 2023-01-07 06:33:07.036158 - Epoch: 1 Iteration: 19  train.loss : 6.285940670967102  train.ips : 18164.82983453279 images/s train.lr : 0.8960000000000001 
[1,0]<stdout>:DLL 2023-01-07 06:33:09.154540 - Epoch: 1 Iteration: 39  train.loss : 6.2170477390289305  train.ips : 19337.877713669135 images/s train.lr : 1.408 
[1,0]<stdout>:DLL 2023-01-07 06:33:11.253912 - Epoch: 1 Iteration: 59  train.loss : 6.1754475116729735  train.ips : 19513.214492636092 images/s train.lr : 1.92 
[1,0]<stdout>:DLL 2023-01-07 06:33:13.346279 - Epoch: 1 Iteration: 79  train.loss : 6.159126210212707  train.ips : 19579.477023399933 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:15.502936 - Epoch: 1 Iteration: 99  train.loss : 6.161032724380493  train.ips : 18994.219857889428 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:17.638141 - Epoch: 1 Iteration: 119  train.loss : 6.157495546340942  train.ips : 19186.507319909302 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:19.782125 - Epoch: 1 Iteration: 139  train.loss : 6.174612069129944  train.ips : 19110.899440529163 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:21.898589 - Epoch: 1 Iteration: 159  train.loss : 6.163827705383301  train.ips : 19355.06274952364 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:24.057765 - Epoch: 1 Iteration: 179  train.loss : 6.123152279853821  train.ips : 18972.291611864155 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:26.149699 - Epoch: 1 Iteration: 199  train.loss : 6.1237717628479  train.ips : 19583.400654920413 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:28.330103 - Epoch: 1 Iteration: 219  train.loss : 6.161402845382691  train.ips : 18790.231481446037 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:30.495789 - Epoch: 1 Iteration: 239  train.loss : 6.164983057975769  train.ips : 18917.783528034925 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:32.581322 - Epoch: 1 Iteration: 259  train.loss : 6.172647857666016  train.ips : 19642.695935954718 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:34.734515 - Epoch: 1 Iteration: 279  train.loss : 6.162195062637329  train.ips : 19025.812491991765 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:36.845780 - Epoch: 1 Iteration: 299  train.loss : 6.132574415206909  train.ips : 19405.617872009825 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:38.925605 - Epoch: 1 Iteration: 319  train.loss : 6.170391774177551  train.ips : 19701.41146435927 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:41.118580 - Epoch: 1 Iteration: 339  train.loss : 6.1590344429016115  train.ips : 18679.770713310634 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:43.265134 - Epoch: 1 Iteration: 359  train.loss : 6.183482146263122  train.ips : 19084.02342265124 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:45.357529 - Epoch: 1 Iteration: 379  train.loss : 6.1515339612960815  train.ips : 19579.34313880686 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:47.493390 - Epoch: 1 Iteration: 399  train.loss : 6.152470707893372  train.ips : 19179.351054236 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:49.559141 - Epoch: 1 Iteration: 419  train.loss : 6.162818598747253  train.ips : 19832.0578814214 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:51.692034 - Epoch: 1 Iteration: 439  train.loss : 6.161423969268799  train.ips : 19207.995309546244 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:53.785060 - Epoch: 1 Iteration: 459  train.loss : 6.156814360618592  train.ips : 19574.437531432708 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:55.879350 - Epoch: 1 Iteration: 479  train.loss : 6.139677166938782  train.ips : 19561.483741869342 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:33:58.058753 - Epoch: 1 Iteration: 499  train.loss : 6.167960119247437  train.ips : 18796.446267356212 images/s train.lr : 0 
[1,1]<stderr>:2023-01-07 06:33:58,214:INFO: Starting epoch 2
[1,2]<stderr>:2023-01-07 06:33:58,232:INFO: Starting epoch 2
[1,4]<stderr>:2023-01-07 06:33:58,241:INFO: Starting epoch 2
[1,6]<stderr>:2023-01-07 06:33:58,258:INFO: Starting epoch 2
[1,3]<stderr>:2023-01-07 06:33:58,264:INFO: Starting epoch 2
[1,5]<stderr>:2023-01-07 06:33:58,264:INFO: Starting epoch 2
[1,7]<stderr>:2023-01-07 06:33:58,279:INFO: Starting epoch 2
[1,0]<stdout>:DLL 2023-01-07 06:33:58.291292 - Epoch: 1  train.loss : 6.165634588241577  train.ips : 19170.068173655607 images/s
[1,0]<stderr>:2023-01-07 06:33:58,291:INFO: Starting epoch 2
[1,0]<stdout>:DLL 2023-01-07 06:34:00.380440 - Epoch: 2 Iteration: 19  train.loss : 6.184195399284363  train.ips : 19607.94000244245 images/s train.lr : 1.3056 
[1,0]<stdout>:DLL 2023-01-07 06:34:02.458617 - Epoch: 2 Iteration: 39  train.loss : 5.998069763183594  train.ips : 19711.7079762806 images/s train.lr : 1.8176 
[1,0]<stdout>:DLL 2023-01-07 06:34:04.614208 - Epoch: 2 Iteration: 59  train.loss : 5.985941195487976  train.ips : 19004.036213694602 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:06.761977 - Epoch: 2 Iteration: 79  train.loss : 5.979050040245056  train.ips : 19074.094633099558 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:08.872887 - Epoch: 2 Iteration: 99  train.loss : 5.940662288665772  train.ips : 19410.21552734161 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:10.971092 - Epoch: 2 Iteration: 119  train.loss : 5.9551060676574705  train.ips : 19524.147205917565 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:13.090287 - Epoch: 2 Iteration: 139  train.loss : 5.926969242095947  train.ips : 19331.119258948616 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:15.196133 - Epoch: 2 Iteration: 159  train.loss : 5.965027499198913  train.ips : 19453.37104009633 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:17.291066 - Epoch: 2 Iteration: 179  train.loss : 5.950444459915161  train.ips : 19555.669922820536 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:19.372127 - Epoch: 2 Iteration: 199  train.loss : 5.972505402565003  train.ips : 19686.61510139887 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:21.477817 - Epoch: 2 Iteration: 219  train.loss : 5.969130253791809  train.ips : 19453.923952016612 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:23.587975 - Epoch: 2 Iteration: 239  train.loss : 5.970583987236023  train.ips : 19416.169185513754 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:25.662376 - Epoch: 2 Iteration: 259  train.loss : 5.958109164237976  train.ips : 19754.884839528284 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:27.738230 - Epoch: 2 Iteration: 279  train.loss : 5.9685584783554075  train.ips : 19737.86489363071 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:29.891351 - Epoch: 2 Iteration: 299  train.loss : 5.9704622507095335  train.ips : 19026.455151712216 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:31.943796 - Epoch: 2 Iteration: 319  train.loss : 5.9485948324203495  train.ips : 19960.44036459335 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:33.980579 - Epoch: 2 Iteration: 339  train.loss : 5.968296360969544  train.ips : 20115.039682428174 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:36.143010 - Epoch: 2 Iteration: 359  train.loss : 5.945780229568482  train.ips : 18944.807207550544 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:38.269152 - Epoch: 2 Iteration: 379  train.loss : 5.959596276283264  train.ips : 19268.175208040117 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:40.336395 - Epoch: 2 Iteration: 399  train.loss : 5.972356081008911  train.ips : 19816.276096579128 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:42.446229 - Epoch: 2 Iteration: 419  train.loss : 5.98031702041626  train.ips : 19416.65634494371 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:44.449194 - Epoch: 2 Iteration: 439  train.loss : 5.993511390686035  train.ips : 20452.709753481064 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:46.481616 - Epoch: 2 Iteration: 459  train.loss : 5.981221795082092  train.ips : 20157.47494141616 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:48.494364 - Epoch: 2 Iteration: 479  train.loss : 5.975268411636352  train.ips : 20363.558889715317 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:50.568416 - Epoch: 2 Iteration: 499  train.loss : 5.951612257957459  train.ips : 19751.93221931434 images/s train.lr : 0 
[1,0]<stdout>:DLL 2023-01-07 06:34:50.712095 - Epoch: 2  train.loss : 5.97485480594635  train.ips : 19339.166065280388 images/s
[1,0]<stdout>:DLL 2023-01-07 06:34:50.785030 - Summary: train.loss : 5.97485480594635  train.ips : 19158.52053567005 images/s
Traceback (most recent call last):
  File "benchmark.py", line 84, in <module>
    epochs_report = list(filter(lambda x: len(x['step']) == 1, log_data))
  File "benchmark.py", line 84, in <lambda>
    epochs_report = list(filter(lambda x: len(x['step']) == 1, log_data))
KeyError: 'step'
train.ips
           |    256    |
------------------------
     8     |    nan    |

