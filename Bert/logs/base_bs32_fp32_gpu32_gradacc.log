/root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/seq2vec/encoder.py:683: DeprecationWarning: invalid escape sequence \s
  """
/root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/seq2vec/encoder.py:740: DeprecationWarning: invalid escape sequence \s
  """
[32m[2021-01-08 13:10:02,719] [    INFO][0m - Downloading bert-base-uncased-vocab.txt from https://paddle-hapi.bj.bcebos.com/models/bert/bert-base-uncased-vocab.txt[0m

  0%|          | 0/227 [00:00<?, ?it/s]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 227/227 [00:00<00:00, 5622.36it/s]
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:58
The behavior of expression A - B has been unified with elementwise_sub(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_sub(X, Y, axis=0) instead of A - B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:67
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:378
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:527
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:535
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:501
The behavior of expression A / B has been unified with elementwise_div(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_div(X, Y, axis=0) instead of A / B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/distributed/fleet/base/fleet_base.py:627: UserWarning: It is recommended to use DistributedStrategy in fleet.init(). The strategy here is only for compatibility. If the strategy in fleet.distributed_optimizer() is not None, then it will overwrite the DistributedStrategy in fleet.init(), which will take effect in distributed training.
  "It is recommended to use DistributedStrategy "
server not ready, wait 3 sec to retry...
not ready endpoints:['job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60002', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60003', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60004', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60005', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60006', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60007', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60008']
server not ready, wait 3 sec to retry...
not ready endpoints:['job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60002', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60003', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60004', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60005', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60006', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60007', 'job-0bb5ff72616b2f6d-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60008']
W0108 13:10:11.560655  1680 device_context.cc:342] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 11.0, Runtime API Version: 10.1
W0108 13:10:11.565652  1680 device_context.cc:352] device: 0, cuDNN Version: 7.6.
[0] NCCL INFO NET/Socket : Using [0]xgbe0:<0>
[0] NCCL INFO NET/Plugin : No plugin found (libnccl-net.so).
[0] NCCL INFO NCCL_IB_DISABLE set by environment to 0.
[0] NCCL INFO NET/IB : Using [0]mlx5_0:1/RoCE ; OOB xgbe0:<0>

[0] NCCL INFO Setting affinity for GPU 0 to ffffff
[0] NCCL INFO NCCL_P2P_DISABLE set by environment to 0.
[0] NCCL INFO CUDA Dev 0[0], IB NIC distance :  NODE
[0] NCCL INFO Channel 00 :    0   1   3   2   6   4   5   7   8   9  11  10  14  12  13  15  16  17  19  18
[0] NCCL INFO Channel 01 :    0   1   3   2   6   4   5   7   8   9  11  10  14  12  13  15  16  17  19  18
[0] NCCL INFO Ring 00 : 31 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 00 : 0[0] -> 1[1] via P2P/IPC
[0] NCCL INFO NCCL_IB_GID_INDEX set by environment to 3.
[0] NCCL INFO Ring 00 : 16 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 00 : 0 -> 16 [send] via NET/IB/0
[0] NCCL INFO Ring 01 : 31 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 01 : 0[0] -> 1[1] via P2P/IPC
[0] NCCL INFO Ring 01 : 0 -> 24 [send] via NET/IB/0
[0] NCCL INFO Ring 01 : 24 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Trees [0] -1->0->1/16/-1 [1] 24->0->1/-1/-1
[0] NCCL INFO Using 256 threads, Min Comp Cap 7, Trees enabled up to size 3840000
[0] NCCL INFO comm 0x7f4c9c007810 rank 0 nranks 32 cudaDev 0 nvmlDev 0 - Init COMPLETE
[0] NCCL INFO Launch mode Parallel
0108 13:10:29.269799  1680 build_strategy.cc:116] Currently, fuse_broadcast_ops only works under Reduce mode.
W0108 13:10:29.391423  1680 fuse_all_reduce_op_pass.cc:79] Find all_reduce operators: 206. To make the speed faster, some all_reduce ops are fused during training, after fusion, the number of all_reduce ops is 20.
tobal step: 20, epoch: 0, batch: 19, loss: 11.210134, avg_reader_cost: 0.03253 sec, avg_batch_cost: 0.38907 sec, avg_samples: 32.00000, ips: 82.24685 sequences/sec
tobal step: 40, epoch: 0, batch: 39, loss: 11.147930, avg_reader_cost: 0.00008 sec, avg_batch_cost: 0.21560 sec, avg_samples: 32.00000, ips: 148.42493 sequences/sec
tobal step: 60, epoch: 0, batch: 59, loss: 11.168588, avg_reader_cost: 0.00008 sec, avg_batch_cost: 0.21580 sec, avg_samples: 32.00000, ips: 148.28358 sequences/sec
tobal step: 80, epoch: 0, batch: 79, loss: 11.243958, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21587 sec, avg_samples: 32.00000, ips: 148.23678 sequences/sec
tobal step: 100, epoch: 0, batch: 99, loss: 11.207837, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21680 sec, avg_samples: 32.00000, ips: 147.60364 sequences/sec
tobal step: 120, epoch: 0, batch: 119, loss: 11.190973, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21655 sec, avg_samples: 32.00000, ips: 147.77344 sequences/sec
tobal step: 140, epoch: 0, batch: 139, loss: 11.241247, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21725 sec, avg_samples: 32.00000, ips: 147.29448 sequences/sec
tobal step: 160, epoch: 0, batch: 159, loss: 11.163925, avg_reader_cost: 0.00008 sec, avg_batch_cost: 0.21713 sec, avg_samples: 32.00000, ips: 147.37849 sequences/sec
tobal step: 180, epoch: 0, batch: 179, loss: 11.260856, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21701 sec, avg_samples: 32.00000, ips: 147.45527 sequences/sec
tobal step: 200, epoch: 0, batch: 199, loss: 11.202806, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21714 sec, avg_samples: 32.00000, ips: 147.36832 sequences/sec
tobal step: 220, epoch: 0, batch: 219, loss: 11.248072, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21793 sec, avg_samples: 32.00000, ips: 146.83646 sequences/sec
tobal step: 240, epoch: 0, batch: 239, loss: 11.360277, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21779 sec, avg_samples: 32.00000, ips: 146.93219 sequences/sec
tobal step: 260, epoch: 0, batch: 259, loss: 11.248160, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21772 sec, avg_samples: 32.00000, ips: 146.97958 sequences/sec
tobal step: 280, epoch: 0, batch: 279, loss: 11.127519, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.27958 sec, avg_samples: 32.00000, ips: 114.45729 sequences/sec
tobal step: 300, epoch: 0, batch: 299, loss: 11.134852, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21803 sec, avg_samples: 32.00000, ips: 146.76907 sequences/sec
tobal step: 320, epoch: 0, batch: 319, loss: 11.121299, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21841 sec, avg_samples: 32.00000, ips: 146.51359 sequences/sec
tobal step: 340, epoch: 0, batch: 339, loss: 11.128408, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21849 sec, avg_samples: 32.00000, ips: 146.46156 sequences/sec
tobal step: 360, epoch: 0, batch: 359, loss: 11.190463, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21869 sec, avg_samples: 32.00000, ips: 146.32318 sequences/sec
tobal step: 380, epoch: 0, batch: 379, loss: 11.138608, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21878 sec, avg_samples: 32.00000, ips: 146.26850 sequences/sec
tobal step: 400, epoch: 0, batch: 399, loss: 11.175959, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21915 sec, avg_samples: 32.00000, ips: 146.02087 sequences/sec
tobal step: 420, epoch: 0, batch: 419, loss: 11.147767, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21857 sec, avg_samples: 32.00000, ips: 146.40925 sequences/sec
tobal step: 440, epoch: 0, batch: 439, loss: 11.139533, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21914 sec, avg_samples: 32.00000, ips: 146.02820 sequences/sec
tobal step: 460, epoch: 0, batch: 459, loss: 11.171063, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21865 sec, avg_samples: 32.00000, ips: 146.35517 sequences/sec
tobal step: 480, epoch: 0, batch: 479, loss: 11.124159, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.21914 sec, avg_samples: 32.00000, ips: 146.02230 sequences/sec
tobal step: 500, epoch: 0, batch: 499, loss: 11.086165, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21888 sec, avg_samples: 32.00000, ips: 146.19809 sequences/sec
