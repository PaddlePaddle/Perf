[32m[2021-01-08 15:49:39,307] [    INFO][0m - Downloading bert-base-uncased-vocab.txt from https://paddle-hapi.bj.bcebos.com/models/bert/bert-base-uncased-vocab.txt[0m

  0%|          | 0/227 [00:00<?, ?it/s]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 227/227 [00:00<00:00, 4402.46it/s]
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:58
The behavior of expression A - B has been unified with elementwise_sub(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_sub(X, Y, axis=0) instead of A - B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:67
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:378
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:527
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/nn/layer/transformer.py:535
The behavior of expression A + B has been unified with elementwise_add(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_add(X, Y, axis=0) instead of A + B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/fluid/layers/math_op_patch.py:298: UserWarning: /root/paddlejob/workspace/env_run/models/PaddleNLP/paddlenlp/transformers/bert/modeling.py:501
The behavior of expression A / B has been unified with elementwise_div(X, Y, axis=-1) from Paddle 2.0. If your code works well in the older versions but crashes in this version, try to use elementwise_div(X, Y, axis=0) instead of A / B. This transitional warning will be dropped in the future.
  op_type, op_type, EXPRESSION_MAP[method_name]))
/usr/local/python378-gcc540/lib/python3.7/site-packages/paddle/distributed/fleet/base/fleet_base.py:627: UserWarning: It is recommended to use DistributedStrategy in fleet.init(). The strategy here is only for compatibility. If the strategy in fleet.distributed_optimizer() is not None, then it will overwrite the DistributedStrategy in fleet.init(), which will take effect in distributed training.
  "It is recommended to use DistributedStrategy "
server not ready, wait 3 sec to retry...
not ready endpoints:['job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60002', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60003', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60004', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60005', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60006', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60007', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60008']
server not ready, wait 3 sec to retry...
not ready endpoints:['job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60002', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60003', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60004', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60005', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60006', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60007', 'job-0bb5ff7e20cd201b-trainer-0.a5139f34-68ad-5528-8bb7-a906d3bfbf7b:60008']
W0108 15:49:51.252518  1682 device_context.cc:342] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 11.0, Runtime API Version: 10.1
W0108 15:49:51.257702  1682 device_context.cc:352] device: 0, cuDNN Version: 7.6.
[0] NCCL INFO NET/Socket : Using [0]xgbe0:<0>
[0] NCCL INFO NET/Plugin : No plugin found (libnccl-net.so).
[0] NCCL INFO NCCL_IB_DISABLE set by environment to 0.
[0] NCCL INFO NET/IB : Using [0]mlx5_0:1/RoCE ; OOB xgbe0:<0>
[0] NCCL INFO Setting affinity for GPU 0 to ffffff
[0] NCCL INFO NCCL_P2P_DISABLE set by environment to 0.
[0] NCCL INFO CUDA Dev 0[0], IB NIC distance :  NODE
[0] NCCL INFO Channel 00 :    0   1   3   2   6   4   5   7   8   9  11  10  14  12  13  15  16  17  19  18
[0] NCCL INFO Channel 01 :    0   1   3   2   6   4   5   7   8   9  11  10  14  12  13  15  16  17  19  18
[0] NCCL INFO Ring 00 : 31 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 00 : 0[0] -> 1[1] via P2P/IPC
[0] NCCL INFO NCCL_IB_GID_INDEX set by environment to 3.
[0] NCCL INFO Ring 00 : 16 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 00 : 0 -> 16 [send] via NET/IB/0
[0] NCCL INFO Ring 01 : 31 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Ring 01 : 0[0] -> 1[1] via P2P/IPC
[0] NCCL INFO Ring 01 : 0 -> 24 [send] via NET/IB/0
[0] NCCL INFO Ring 01 : 24 -> 0 [receive] via NET/IB/0
[0] NCCL INFO Trees [0] -1->0->1/16/-1 [1] 24->0->1/-1/-1
[0] NCCL INFO Using 256 threads, Min Comp Cap 7, Trees enabled up to size 3840000
[0] NCCL INFO comm 0x7f61d0007810 rank 0 nranks 32 cudaDev 0 nvmlDev 0 - Init COMPLETE
[0] NCCL INFO Launch mode Parallel
W0108 15:50:08.323380  1682 build_strategy.cc:116] Currently, fuse_broadcast_ops only works under Reduce mode.
W0108 15:50:08.460306  1682 fuse_all_reduce_op_pass.cc:79] Find all_reduce operators: 206. To make the speed faster, some all_reduce ops are fused during training, after fusion, the number of all_reduce ops is 20.
tobal step: 20, epoch: 0, batch: 19, loss: 11.261802, avg_reader_cost: 0.04563 sec, avg_batch_cost: 0.25625 sec, avg_samples: 64.00000, ips: 249.75728 sequences/sec
tobal step: 40, epoch: 0, batch: 39, loss: 11.172736, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.10736 sec, avg_samples: 64.00000, ips: 596.10232 sequences/sec
tobal step: 60, epoch: 0, batch: 59, loss: 11.231277, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10729 sec, avg_samples: 64.00000, ips: 596.53967 sequences/sec
tobal step: 80, epoch: 0, batch: 79, loss: 11.197625, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10738 sec, avg_samples: 64.00000, ips: 596.03773 sequences/sec
tobal step: 100, epoch: 0, batch: 99, loss: 11.225403, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10738 sec, avg_samples: 64.00000, ips: 596.02502 sequences/sec
tobal step: 120, epoch: 0, batch: 119, loss: 11.210209, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10735 sec, avg_samples: 64.00000, ips: 596.20506 sequences/sec
tobal step: 140, epoch: 0, batch: 139, loss: 11.174592, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21497 sec, avg_samples: 64.00000, ips: 297.72079 sequences/sec
tobal step: 160, epoch: 0, batch: 159, loss: 11.231220, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10741 sec, avg_samples: 64.00000, ips: 595.82037 sequences/sec
tobal step: 180, epoch: 0, batch: 179, loss: 11.189680, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10749 sec, avg_samples: 64.00000, ips: 595.42263 sequences/sec
tobal step: 200, epoch: 0, batch: 199, loss: 11.169411, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.10749 sec, avg_samples: 64.00000, ips: 595.42666 sequences/sec
tobal step: 220, epoch: 0, batch: 219, loss: 11.232550, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10750 sec, avg_samples: 64.00000, ips: 595.35720 sequences/sec
tobal step: 240, epoch: 0, batch: 239, loss: 11.203470, avg_reader_cost: 0.00005 sec, avg_batch_cost: 0.10746 sec, avg_samples: 64.00000, ips: 595.54865 sequences/sec
tobal step: 260, epoch: 0, batch: 259, loss: 11.181913, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10753 sec, avg_samples: 64.00000, ips: 595.16480 sequences/sec
tobal step: 280, epoch: 0, batch: 279, loss: 11.160852, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21482 sec, avg_samples: 64.00000, ips: 297.92762 sequences/sec
tobal step: 300, epoch: 0, batch: 299, loss: 11.111102, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10751 sec, avg_samples: 64.00000, ips: 595.31151 sequences/sec
tobal step: 320, epoch: 0, batch: 9, loss: 11.162904, avg_reader_cost: 0.00562 sec, avg_batch_cost: 0.05629 sec, avg_samples: 32.00000, ips: 568.52406 sequences/sec
tobal step: 340, epoch: 0, batch: 29, loss: 11.186525, avg_reader_cost: 0.00008 sec, avg_batch_cost: 0.10748 sec, avg_samples: 64.00000, ips: 595.47394 sequences/sec
tobal step: 360, epoch: 0, batch: 49, loss: 11.187188, avg_reader_cost: 0.00007 sec, avg_batch_cost: 0.10750 sec, avg_samples: 64.00000, ips: 595.35746 sequences/sec
tobal step: 380, epoch: 0, batch: 69, loss: 11.182142, avg_reader_cost: 0.00005 sec, avg_batch_cost: 0.10765 sec, avg_samples: 64.00000, ips: 594.54624 sequences/sec
tobal step: 400, epoch: 0, batch: 89, loss: 11.122020, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.21690 sec, avg_samples: 64.00000, ips: 295.06566 sequences/sec
tobal step: 420, epoch: 0, batch: 109, loss: 11.056735, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10778 sec, avg_samples: 64.00000, ips: 593.77761 sequences/sec
tobal step: 440, epoch: 0, batch: 129, loss: 11.120766, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10760 sec, avg_samples: 64.00000, ips: 594.77078 sequences/sec
tobal step: 460, epoch: 0, batch: 149, loss: 11.089247, avg_reader_cost: 0.00006 sec, avg_batch_cost: 0.10774 sec, avg_samples: 64.00000, ips: 594.02332 sequences/sec
tobal step: 480, epoch: 0, batch: 169, loss: 11.086229, avg_reader_cost: 0.00005 sec, avg_batch_cost: 0.10762 sec, avg_samples: 64.00000, ips: 594.68421 sequences/sec
tobal step: 500, epoch: 0, batch: 189, loss: 11.076207, avg_reader_cost: 0.00005 sec, avg_batch_cost: 0.10776 sec, avg_samples: 64.00000, ips: 593.92784 sequences/sec
