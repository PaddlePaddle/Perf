/opt/conda/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
tools/train.py:148: UserWarning: `--gpus` is deprecated because we only support single GPU mode in non-distributed training. Use `gpus=1` now.
  warnings.warn('`--gpus` is deprecated because we only support '
2023-08-03 02:21:58,233 - mmseg - INFO - Multi-processing start method is `None`
2023-08-03 02:21:58,234 - mmseg - INFO - OpenCV num_threads is `80
2023-08-03 02:21:58,273 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]
CUDA available: True
GPU 0: Tesla V100-SXM2-32GB
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.5, V11.5.50
GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
PyTorch: 1.11.0a0+b6df043
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2019.0.5 Product Build 20190808 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash N/A)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.5
  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_86,code=compute_86
  - CuDNN 8.3
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.5, CUDNN_VERSION=8.3.0, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS=-fno-gnu-unique -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.11.0a0
OpenCV: 4.5.5
MMCV: 1.7.1
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.5
MMSegmentation: 0.30.0+a00a3b6
------------------------------------------------------------

2023-08-03 02:21:58,273 - mmseg - INFO - Distributed training: False
2023-08-03 02:21:58,541 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained='open-mmlab://msra/hrnetv2_w18',
    backbone=dict(
        type='HRNet',
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(18, 36)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(18, 36, 72)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(18, 36, 72, 144)))),
    decode_head=dict(
        type='FCNHead',
        in_channels=[18, 36, 72, 144],
        in_index=(0, 1, 2, 3),
        channels=270,
        input_transform='resize_concat',
        kernel_size=1,
        num_convs=1,
        concat_input=False,
        dropout_ratio=-1,
        num_classes=19,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CityscapesDataset'
data_root = 'data/cityscapes/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=8,
    train=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/train',
        ann_dir='gtFine/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=4, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict(type='Fp16OptimizerHook', loss_scale=512.0)
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=180)
checkpoint_config = dict(by_epoch=False, interval=8000)
evaluation = dict(interval=8000, metric='mIoU', pre_eval=True)
work_dir = './work_dirs/fcn_hr18_512x1024_80k_cityscapes'
gpu_ids = range(0, 1)
auto_resume = False

2023-08-03 02:21:58,541 - mmseg - INFO - Set random seed to 851653335, deterministic: False
/workspace/mmsegmentation/mmseg/models/backbones/hrnet.py:318: UserWarning: DeprecationWarning: pretrained is deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is deprecated, '
/workspace/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:235: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
2023-08-03 02:21:58,741 - mmcv - INFO - initialize HRNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://msra/hrnetv2_w18'}
2023-08-03 02:21:58,741 - mmcv - INFO - load model from: open-mmlab://msra/hrnetv2_w18
2023-08-03 02:21:58,742 - mmcv - INFO - load checkpoint from openmmlab path: open-mmlab://msra/hrnetv2_w18
2023-08-03 02:21:59,498 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2023-08-03 02:21:59,549 - mmcv - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.conv1.weight - torch.Size([64, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,552 - mmcv - INFO - 
backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,553 - mmcv - INFO - 
backbone.layer1.3.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.0.0.weight - torch.Size([18, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.1.0.0.weight - torch.Size([36, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.1.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.transition1.1.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,554 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage2.0.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.transition2.2.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.transition2.2.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.transition2.2.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,555 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,556 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,557 - mmcv - INFO - 
backbone.stage3.0.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.0.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,558 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,559 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,560 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.1.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,561 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,562 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,563 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.2.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,564 - mmcv - INFO - 
backbone.stage3.3.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,565 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,566 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage3.3.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.transition3.3.0.0.weight - torch.Size([144, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.transition3.3.0.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.transition3.3.0.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,567 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,568 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,569 - mmcv - INFO - 
backbone.stage4.0.branches.3.0.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.1.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.2.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.branches.3.3.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.3.0.weight - torch.Size([18, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.3.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.0.3.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,570 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.3.0.weight - torch.Size([36, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.3.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.1.3.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.3.0.weight - torch.Size([72, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.3.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.2.3.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.1.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.2.0.weight - torch.Size([144, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.2.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.0.2.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.0.0.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.1.0.weight - torch.Size([144, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.1.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.1.1.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,571 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.2.0.0.weight - torch.Size([144, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.2.0.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.0.fuse_layers.3.2.0.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,572 - mmcv - INFO - 
backbone.stage4.1.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,573 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.0.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.1.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.2.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,574 - mmcv - INFO - 
backbone.stage4.1.branches.3.3.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.3.0.weight - torch.Size([18, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.3.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.0.3.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.3.0.weight - torch.Size([36, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.3.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.1.3.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.3.0.weight - torch.Size([72, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.3.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.2.3.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,575 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.1.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.2.0.weight - torch.Size([144, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.2.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.0.2.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.0.0.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.1.0.weight - torch.Size([144, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.1.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.1.1.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.2.0.0.weight - torch.Size([144, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.2.0.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.1.fuse_layers.3.2.0.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.0.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.1.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,576 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.2.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.conv1.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.bn1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.bn1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.conv2.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.bn2.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.0.3.bn2.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.0.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.1.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.2.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.conv1.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.bn1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.bn1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.conv2.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.bn2.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,577 - mmcv - INFO - 
backbone.stage4.2.branches.1.3.bn2.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.0.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.1.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.2.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.conv1.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.bn1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.bn1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.conv2.weight - torch.Size([72, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.bn2.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.2.3.bn2.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.0.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,578 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.1.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.2.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.conv1.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.bn1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.bn1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.conv2.weight - torch.Size([144, 144, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.bn2.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.branches.3.3.bn2.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.1.0.weight - torch.Size([18, 36, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.2.0.weight - torch.Size([18, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.2.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.2.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.3.0.weight - torch.Size([18, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.3.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.0.3.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.0.0.0.weight - torch.Size([36, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.0.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.0.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.2.0.weight - torch.Size([36, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.2.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.2.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.3.0.weight - torch.Size([36, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,579 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.3.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.1.3.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.1.0.weight - torch.Size([72, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.1.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.0.1.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.1.0.0.weight - torch.Size([72, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.1.0.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.1.0.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.3.0.weight - torch.Size([72, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.3.1.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.2.3.1.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.0.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.0.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.0.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.1.0.weight - torch.Size([18, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.1.1.weight - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.1.1.bias - torch.Size([18]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.2.0.weight - torch.Size([144, 18, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.2.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.0.2.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.0.0.weight - torch.Size([36, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.0.1.weight - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.0.1.bias - torch.Size([36]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.1.0.weight - torch.Size([144, 36, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.1.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.1.1.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.2.0.0.weight - torch.Size([144, 72, 3, 3]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.2.0.1.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
backbone.stage4.2.fuse_layers.3.2.0.1.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://msra/hrnetv2_w18 
 
2023-08-03 02:21:59,580 - mmcv - INFO - 
decode_head.conv_seg.weight - torch.Size([19, 270, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-08-03 02:21:59,581 - mmcv - INFO - 
decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-08-03 02:21:59,581 - mmcv - INFO - 
decode_head.convs.0.conv.weight - torch.Size([270, 270, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
 
2023-08-03 02:21:59,581 - mmcv - INFO - 
decode_head.convs.0.bn.weight - torch.Size([270]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
 
2023-08-03 02:21:59,581 - mmcv - INFO - 
decode_head.convs.0.bn.bias - torch.Size([270]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
 
tools/train.py:236: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2023-08-03 02:21:59,588 - mmseg - INFO - EncoderDecoder(
  (backbone): HRNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (transition1): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(256, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage2): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage3): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition3): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage4): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
  )
  init_cfg={'type': 'Pretrained', 'checkpoint': 'open-mmlab://msra/hrnetv2_w18'}
  (decode_head): FCNHead(
    input_transform=resize_concat, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(270, 19, kernel_size=(1, 1), stride=(1, 1))
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(270, 270, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2023-08-03 02:21:59,651 - mmseg - INFO - Loaded 2975 images
2023-08-03 02:22:02,039 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-08-03 02:22:02,039 - mmseg - INFO - workflow: [('train', 1)], max: 180 iters
2023-08-03 02:22:02,042 - mmseg - INFO - Checkpoints will be saved to /workspace/mmsegmentation/work_dirs/fcn_hr18_512x1024_80k_cityscapes by HardDiskBackend.
2023-08-03 02:22:09,034 - mmseg - INFO - Iter [4/180]	lr: 9.851e-03, eta: 0:04:52, time: 1.661, data_time: 0.341, memory: 11402, decode.loss_ce: 2.5548, decode.acc_seg: 23.0673, loss: 2.5548
2023-08-03 02:22:10,889 - mmseg - INFO - Iter [8/180]	lr: 9.653e-03, eta: 0:03:02, time: 0.464, data_time: 0.024, memory: 11402, decode.loss_ce: 2.1558, decode.acc_seg: 46.0211, loss: 2.1558
2023-08-03 02:22:12,725 - mmseg - INFO - Iter [12/180]	lr: 9.454e-03, eta: 0:02:24, time: 0.459, data_time: 0.022, memory: 11402, decode.loss_ce: 1.7999, decode.acc_seg: 47.8508, loss: 1.7999
2023-08-03 02:22:14,540 - mmseg - INFO - Iter [16/180]	lr: 9.254e-03, eta: 0:02:04, time: 0.454, data_time: 0.018, memory: 11402, decode.loss_ce: 1.5619, decode.acc_seg: 54.8471, loss: 1.5619
2023-08-03 02:22:16,387 - mmseg - INFO - Iter [20/180]	lr: 9.054e-03, eta: 0:01:51, time: 0.462, data_time: 0.022, memory: 11402, decode.loss_ce: 1.2897, decode.acc_seg: 65.3922, loss: 1.2897
2023-08-03 02:22:18,217 - mmseg - INFO - Iter [24/180]	lr: 8.854e-03, eta: 0:01:42, time: 0.457, data_time: 0.021, memory: 11402, decode.loss_ce: 1.3634, decode.acc_seg: 64.0994, loss: 1.3634
2023-08-03 02:22:20,041 - mmseg - INFO - Iter [28/180]	lr: 8.653e-03, eta: 0:01:35, time: 0.456, data_time: 0.020, memory: 11402, decode.loss_ce: 1.0919, decode.acc_seg: 72.5894, loss: 1.0919
2023-08-03 02:22:21,844 - mmseg - INFO - Iter [32/180]	lr: 8.451e-03, eta: 0:01:29, time: 0.451, data_time: 0.018, memory: 11402, decode.loss_ce: 1.1684, decode.acc_seg: 67.5376, loss: 1.1684
2023-08-03 02:22:23,667 - mmseg - INFO - Iter [36/180]	lr: 8.249e-03, eta: 0:01:25, time: 0.456, data_time: 0.020, memory: 11402, decode.loss_ce: 1.1717, decode.acc_seg: 68.0053, loss: 1.1717
2023-08-03 02:22:25,500 - mmseg - INFO - Iter [40/180]	lr: 8.047e-03, eta: 0:01:20, time: 0.458, data_time: 0.021, memory: 11402, decode.loss_ce: 0.8772, decode.acc_seg: 75.8281, loss: 0.8772
2023-08-03 02:22:27,318 - mmseg - INFO - Iter [44/180]	lr: 7.844e-03, eta: 0:01:17, time: 0.454, data_time: 0.021, memory: 11402, decode.loss_ce: 0.9139, decode.acc_seg: 77.0739, loss: 0.9139
2023-08-03 02:22:29,135 - mmseg - INFO - Iter [48/180]	lr: 7.640e-03, eta: 0:01:13, time: 0.454, data_time: 0.019, memory: 11402, decode.loss_ce: 0.8125, decode.acc_seg: 77.1461, loss: 0.8125
2023-08-03 02:22:30,930 - mmseg - INFO - Iter [52/180]	lr: 7.435e-03, eta: 0:01:10, time: 0.449, data_time: 0.017, memory: 11402, decode.loss_ce: 0.8932, decode.acc_seg: 73.9866, loss: 0.8932
2023-08-03 02:22:32,733 - mmseg - INFO - Iter [56/180]	lr: 7.230e-03, eta: 0:01:07, time: 0.451, data_time: 0.019, memory: 11402, decode.loss_ce: 0.7084, decode.acc_seg: 77.9224, loss: 0.7084
2023-08-03 02:22:34,526 - mmseg - INFO - Iter [60/180]	lr: 7.025e-03, eta: 0:01:04, time: 0.448, data_time: 0.018, memory: 11402, decode.loss_ce: 0.8829, decode.acc_seg: 74.2902, loss: 0.8829
2023-08-03 02:22:36,315 - mmseg - INFO - Iter [64/180]	lr: 6.818e-03, eta: 0:01:01, time: 0.447, data_time: 0.019, memory: 11402, decode.loss_ce: 0.6951, decode.acc_seg: 80.9249, loss: 0.6951
2023-08-03 02:22:38,122 - mmseg - INFO - Iter [68/180]	lr: 6.611e-03, eta: 0:00:58, time: 0.452, data_time: 0.020, memory: 11402, decode.loss_ce: 0.6963, decode.acc_seg: 80.2474, loss: 0.6963
2023-08-03 02:22:39,919 - mmseg - INFO - Iter [72/180]	lr: 6.403e-03, eta: 0:00:56, time: 0.449, data_time: 0.020, memory: 11402, decode.loss_ce: 0.6256, decode.acc_seg: 82.3148, loss: 0.6256
2023-08-03 02:22:41,707 - mmseg - INFO - Iter [76/180]	lr: 6.195e-03, eta: 0:00:53, time: 0.447, data_time: 0.019, memory: 11402, decode.loss_ce: 0.7406, decode.acc_seg: 78.1285, loss: 0.7406
2023-08-03 02:22:43,497 - mmseg - INFO - Iter [80/180]	lr: 5.985e-03, eta: 0:00:51, time: 0.447, data_time: 0.018, memory: 11402, decode.loss_ce: 0.5523, decode.acc_seg: 83.0307, loss: 0.5523
2023-08-03 02:22:45,296 - mmseg - INFO - Iter [84/180]	lr: 5.775e-03, eta: 0:00:49, time: 0.450, data_time: 0.019, memory: 11402, decode.loss_ce: 0.7004, decode.acc_seg: 78.5060, loss: 0.7004
2023-08-03 02:22:47,232 - mmseg - INFO - Iter [88/180]	lr: 5.564e-03, eta: 0:00:46, time: 0.484, data_time: 0.021, memory: 11402, decode.loss_ce: 0.5861, decode.acc_seg: 82.3379, loss: 0.5861
2023-08-03 02:22:49,029 - mmseg - INFO - Iter [92/180]	lr: 5.352e-03, eta: 0:00:44, time: 0.449, data_time: 0.018, memory: 11402, decode.loss_ce: 0.6402, decode.acc_seg: 80.3405, loss: 0.6402
2023-08-03 02:22:50,841 - mmseg - INFO - Iter [96/180]	lr: 5.139e-03, eta: 0:00:42, time: 0.453, data_time: 0.020, memory: 11402, decode.loss_ce: 0.5029, decode.acc_seg: 85.6610, loss: 0.5029
2023-08-03 02:22:52,644 - mmseg - INFO - Iter [100/180]	lr: 4.925e-03, eta: 0:00:40, time: 0.451, data_time: 0.019, memory: 11402, decode.loss_ce: 0.6229, decode.acc_seg: 80.8003, loss: 0.6229
2023-08-03 02:22:54,524 - mmseg - INFO - Iter [104/180]	lr: 4.710e-03, eta: 0:00:38, time: 0.470, data_time: 0.021, memory: 11402, decode.loss_ce: 0.6217, decode.acc_seg: 80.9916, loss: 0.6217
2023-08-03 02:22:56,314 - mmseg - INFO - Iter [108/180]	lr: 4.494e-03, eta: 0:00:35, time: 0.447, data_time: 0.018, memory: 11402, decode.loss_ce: 0.6733, decode.acc_seg: 80.5092, loss: 0.6733
2023-08-03 02:22:58,152 - mmseg - INFO - Iter [112/180]	lr: 4.277e-03, eta: 0:00:33, time: 0.460, data_time: 0.020, memory: 11402, decode.loss_ce: 0.6389, decode.acc_seg: 81.7200, loss: 0.6389
2023-08-03 02:22:59,961 - mmseg - INFO - Iter [116/180]	lr: 4.058e-03, eta: 0:00:31, time: 0.452, data_time: 0.020, memory: 11402, decode.loss_ce: 0.5591, decode.acc_seg: 83.7237, loss: 0.5591
2023-08-03 02:23:01,757 - mmseg - INFO - Iter [120/180]	lr: 3.838e-03, eta: 0:00:29, time: 0.449, data_time: 0.019, memory: 11402, decode.loss_ce: 0.5346, decode.acc_seg: 84.5242, loss: 0.5346
2023-08-03 02:23:03,552 - mmseg - INFO - Iter [124/180]	lr: 3.617e-03, eta: 0:00:27, time: 0.449, data_time: 0.018, memory: 11402, decode.loss_ce: 0.8907, decode.acc_seg: 73.7857, loss: 0.8907
2023-08-03 02:23:05,341 - mmseg - INFO - Iter [128/180]	lr: 3.394e-03, eta: 0:00:25, time: 0.447, data_time: 0.019, memory: 11402, decode.loss_ce: 0.5829, decode.acc_seg: 83.0346, loss: 0.5829
2023-08-03 02:23:07,141 - mmseg - INFO - Iter [132/180]	lr: 3.169e-03, eta: 0:00:23, time: 0.450, data_time: 0.020, memory: 11402, decode.loss_ce: 0.5794, decode.acc_seg: 83.0265, loss: 0.5794
2023-08-03 02:23:08,961 - mmseg - INFO - Iter [136/180]	lr: 2.943e-03, eta: 0:00:21, time: 0.455, data_time: 0.019, memory: 11402, decode.loss_ce: 0.6269, decode.acc_seg: 82.4635, loss: 0.6269
2023-08-03 02:23:10,768 - mmseg - INFO - Iter [140/180]	lr: 2.715e-03, eta: 0:00:19, time: 0.452, data_time: 0.019, memory: 11402, decode.loss_ce: 0.6839, decode.acc_seg: 79.0073, loss: 0.6839
2023-08-03 02:23:12,561 - mmseg - INFO - Iter [144/180]	lr: 2.484e-03, eta: 0:00:17, time: 0.448, data_time: 0.018, memory: 11402, decode.loss_ce: 0.6641, decode.acc_seg: 80.6345, loss: 0.6641
2023-08-03 02:23:14,370 - mmseg - INFO - Iter [148/180]	lr: 2.251e-03, eta: 0:00:15, time: 0.452, data_time: 0.021, memory: 11402, decode.loss_ce: 0.6334, decode.acc_seg: 81.3945, loss: 0.6334
2023-08-03 02:23:16,165 - mmseg - INFO - Iter [152/180]	lr: 2.014e-03, eta: 0:00:13, time: 0.449, data_time: 0.019, memory: 11402, decode.loss_ce: 0.6235, decode.acc_seg: 81.2646, loss: 0.6235
2023-08-03 02:23:18,101 - mmseg - INFO - Iter [156/180]	lr: 1.775e-03, eta: 0:00:11, time: 0.484, data_time: 0.019, memory: 11402, decode.loss_ce: 0.5629, decode.acc_seg: 83.9363, loss: 0.5629
2023-08-03 02:23:20,046 - mmseg - INFO - Iter [160/180]	lr: 1.532e-03, eta: 0:00:09, time: 0.486, data_time: 0.020, memory: 11402, decode.loss_ce: 0.5591, decode.acc_seg: 83.7682, loss: 0.5591
2023-08-03 02:23:21,909 - mmseg - INFO - Iter [164/180]	lr: 1.284e-03, eta: 0:00:07, time: 0.466, data_time: 0.021, memory: 11402, decode.loss_ce: 0.5812, decode.acc_seg: 82.9599, loss: 0.5812
2023-08-03 02:23:23,712 - mmseg - INFO - Iter [168/180]	lr: 1.030e-03, eta: 0:00:05, time: 0.451, data_time: 0.018, memory: 11402, decode.loss_ce: 0.4404, decode.acc_seg: 86.7280, loss: 0.4404
2023-08-03 02:23:25,525 - mmseg - INFO - Iter [172/180]	lr: 7.679e-04, eta: 0:00:03, time: 0.453, data_time: 0.021, memory: 11402, decode.loss_ce: 0.6604, decode.acc_seg: 80.0289, loss: 0.6604
2023-08-03 02:23:27,315 - mmseg - INFO - Iter [176/180]	lr: 4.935e-04, eta: 0:00:01, time: 0.447, data_time: 0.018, memory: 11402, decode.loss_ce: 0.5147, decode.acc_seg: 85.1579, loss: 0.5147
2023-08-03 02:23:29,178 - mmseg - INFO - Saving checkpoint at 180 iterations
2023-08-03 02:23:29,589 - mmseg - INFO - Iter [180/180]	lr: 1.924e-04, eta: 0:00:00, time: 0.568, data_time: 0.021, memory: 11402, decode.loss_ce: 0.6320, decode.acc_seg: 80.7009, loss: 0.6320
